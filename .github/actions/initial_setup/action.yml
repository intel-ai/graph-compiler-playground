name: Initial setup
description: Setup conda and system environments to run tests

inputs:
    conda_env:
        required: true
        type: string
        description: Name of conda env
    compiler:
        required: true
        type: string
        description: Compiler used for execution

runs:
    using: composite
    steps:
        - uses: actions/checkout@v4

        - name: Get Date
          id: get-date
          run: echo "today=$(/bin/date -u '+%Y%m%d')" >> $GITHUB_OUTPUT
          shell: bash

        - name: Restore Conda env cache
          id: conda-cache
          uses: actions/cache@v3
          env:
              # Increase this value to reset cache if etc/example-environment.yml has not changed
              CACHE_NUMBER: 2
          with:
              path: ${{ env.CONDA }}/envs
              key: >-
                  conda-${{ inputs.conda_env }}-
                  ${{ hashFiles(format('tests/conda-envs/{0}.yaml', inputs.conda_env)) }}-
                  ${{ steps.get-date.outputs.today }}-
                  ${{ env.CACHE_NUMBER }}

        - name: Update conda env for non-torch-mlir envs
          if: steps.conda-cache.outputs.cache-hit != 'true' && inputs.conda_env != 'mlir'
          shell: bash -el {0}
          run: ${CONDA}/bin/conda env update --solver libmamba -n ${{ inputs.conda_env }} -f tests/conda-envs/${{ inputs.conda_env }}.yaml

        - name: Update conda env for torch-mlir env
          if: steps.conda-cache.outputs.cache-hit != 'true' && inputs.conda_env == 'mlir'
          uses: ./.github/actions/create_torch_mlir_conda_env
          with:
              conda_env: $${{ inputs.conda_env }}

        - name: Download mlir that was built in previous job
          uses: actions/download-artifact@v3
          with:
              name: torch-mlir-binary
              path: torch-mlir
          if: ${{ inputs.conda_env == 'mlir' }}

        - name: Setup benchmarks package
          shell: bash -el {0}
          run: |
              source ${CONDA}/bin/activate ${{ inputs.conda_env }}
              pip install -e .

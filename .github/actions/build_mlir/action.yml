name: Build torch-mlir
description: Checkout torch-mlir repo and build it in mlir-test conda env

inputs:
    torch_mlir_repo:
        description: Torch-MLIR repository on github
        required: true
        default: intel-ai/torch-mlir
        type: string
    torch_mlir_branch:
        description: Torch-MLIR branch to checkout
        required: true
        default: cpu-proto
        type: string

runs:
    using: composite
    steps:
        - name: Checkout torch-mlir repo
          uses: actions/checkout@v4
          with:
              repository: ${{ inputs.torch_mlir_repo }}
              path: torch-mlir
              ref: ${{ inputs.torch_mlir_branch }}
              fetch-depth: 0
              submodules: recursive

        - name: Restore Conda env cache for mlir env
          id: conda-cache
          uses: actions/cache@v3
          env:
              # Increase this value to reset cache if etc/example-environment.yml has not changed
              CACHE_NUMBER: 3
          with:
              path: /home/runner/.conda/envs
              key: >-
                  conda-${{ inputs.conda_env }}-
                  ${{ hashFiles('torch-mlir/conda-dev-env.yml.yaml',
                      'torch-mlir/requirements.txt',
                      'torch-mlir/pytorch-requirements.txt',
                      'torch-mlir/build-requirements.txt',
                      'torch-mlir/test-requirements.txt',
                      'torch-mlir/torchvision-requirements.txt') }}-
                  ${{ steps.get-date.outputs.today }}-
                  ${{ env.CACHE_NUMBER }}

        - name: Build torch-mlir
          shell: bash -el {0}
          run: |
              source /opt/intel/oneapi/setvars.sh
              tests/scripts/build-mlir.sh torch-mlir
              echo PYTHONPATH=`pwd`/torch-mlir/build/tools/torch-mlir/python_packages/torch_mlir:`pwd`/torch-mlir/examples:$PYTHONPATH >> $GITHUB_ENV
              echo LD_LIBRARY_PATH=$LD_LIBRARY_PATH >> $GITHUB_ENV
